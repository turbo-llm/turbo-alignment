[tool:pytest]
python_files = test_*.py
python_functions = test_*
python_classes = *Test Test*
filterwarnings =
    ignore::DeprecationWarning
    ignore::FutureWarning
log_level = INFO
markers =
    freeze_time: pytest-freezegun
addopts = -v


[flake8]
max-line-length = 120
max-complexity = 20
show-source = true
exclude =
    data
    __init__.py
enable-extensions = G

ignore =
    # whitespace before ':'
    E203,
    # whitespace before ':'
    E231,
    # 'NumeralNormalizer.normalize_numbers_by_tokens' is too complex (21)
    C901,
    # line break before binary operator
    W503,
    # XXX is a python builtin, consider renaming the class attribute
    A003,
    # "id" is a python builtin and is being shadowed, consider renaming the variable
    A001,
    # first argument of a method should be named 'self'
    N805,
    # fixture does not return anything, add leading underscore
    PT004,
    # set the match parameter in pytest.raises(ValueError)
    PT011,
    # pytest.raises() block should contain a single simple statement
    PT012,
    # fixture ... without value is injected as parameter, use @pytest.mark.usefixtures instead
    PT019,
    # Missing docstring in public module
    D100,
    # Missing docstring in public class
    D101,
    # Missing docstring in public method
    D102,
    # Missing docstring in public function
    D103,
    # Missing docstring in public package
    D104,
    # Missing docstring in magic method
    D105,
    # Missing docstring in public nested class
    D106,
    # Missing docstring in __init__
    D107,
    # 1  blank line required between summary line and description
    D205,
    # No whitespaces allowed surrounding docstring text
    D210,
    # First line should be in imperative mood; try rephrasing
    D401,
    # Unnecessary dict call - rewrite as a literal
    C408,
    # assertion should be broken down into multiple parts
    PT018,
    # fixture <FIXTURE> without value is injected as parameter
    PT019,
    F821,
    # wrong name(s) type in @pytest.mark.parametrize, expected tuple
    PT006,
    # wrong values type in @pytest.mark.parametrize, expected list of tuples
    PT007,
    # don`t use "[on_true] if [expression] else [on_false]" syntax
    IF100,
    # found duplicate test cases (5, 8) in @pytest.mark.parametrize
    PT014,
    # Logging statement uses exception in arguments
    G200,
    # you shouldn`t assign value to variable if it will be use only as return value
    R504,

per-file-ignores =
    factory.py:E800
    hdbscan.py:E712,W504
    test_hdbscan.py:N803


[isort]
multi_line_output=3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88
balanced_wrapping = true
default_section = THIRDPARTY
known_first_party = src,tests

[pylint]
good-names=i,j,k,e,x,y,m,_,es
max-module-lines=300
max-line-length=120
output-format = colorized
generated-members=pydantic, torch
ignored-classes=
extension-pkg-whitelist=lru,pydantic.error_wrappers,pydantic.dataclasses
signature-mutators=pytest.fixture,src.train.decorators.ddp_experiment,src.train.decorators.wandb_experiment
enable=use-symbolic-message-instead,R

disable=
    # --disable option
    R0022,
    # to many local variables (TODO: remove)
    R0914,
    # Constant name "logger" doesn't conform to UPPER_CASE naming style (invalid-name)
    C0103,
    # Missing module docstring (missing-docstring)
    C0111,
    # Method should have "self" as first argument (no-self-argument) - N805 for flake8
    E0213,
    # Method could be a function (no-self-use)
    R0201,
    # Too few public methods (m/n) (too-few-public-methods)
    R0903,
    # Fixme
    W0511,
    # Wrong hanging indentation before block (add 4 spaces)
    C0330,
    # (redefined-outer-name)
    W0621,
    # Use percent formatting in logging functions and pass the percent parameters as arguments
    W1202,
    # Catching too general exception Exception
    W0703,
    # No name in module
    E0611,
    # Too many arguments
    R0913,
    # Too many nested blocks (8/5) (too-many-nested-blocks)
    R1702,
    # Too many branches
    R0912,
    # Too many statements
    R0915,
    # Too many lines in module
    C0302,
    # Too many instance attributes
    R0902,
    # Import outside toplevel
    C0415,
    # Formatting a regular string which could be a f-string
    C0209,
    # unfortunately, min-similarity-lines doesn`t work
    duplicate-code,
    # Redefining built-in 'input'
    W0622,
    # Too many ancestors
    R0901,
    # logging-fstring-interpolation
    W1203,
ignore=
    data
ignore-patterns=
