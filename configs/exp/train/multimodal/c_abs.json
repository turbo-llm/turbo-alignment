{
    "train_dataset_settings": {
        "sources": [
            {
                "name": "train",
                "records_path": "/app/data/multimodal/rullava/train_chat.jsonl",
                "sample_rate": 1000
            }
        ],
        "prompt_template": {
            "role_tag_mapping": {
                "bot": "<bot>",
                "user": "<user>",
                "system": "<system>"
            },
            "prefix_template": "<RS>{role}",
            "suffix_template": "</RS>"
        },
        "modality_token_mapping": {
            "image": "<img>",
            "audio": "<audio>"
        },
        "modality_reader_settings_mapping": {
                "image": {
                    "reader_type": "pickle",
                    "reader_path": null
                },
                "audio": null
            },
        "n_modality_embeddings": 256,
        "start_modality_token": "<MS>",
        "end_modality_token": "</MS>",
        "dataset_type": "multimodal",
        "max_tokens_count": 2000,
        "only_answer_loss": true,
        "truncate_top": false
    },
    "val_dataset_settings": {
        "sources": [
            {
                "name": "val",
                "records_path": "/app/data/multimodal/rullava/val_chat.jsonl",
                "num_samples": 100
            }
        ],
        "prompt_template": {
            "role_tag_mapping": {
                "bot": "<bot>",
                "user": "<user>",
                "system": "<system>"
            },
            "prefix_template": "<RS>{role}",
            "suffix_template": "</RS>"
        },
        "modality_token_mapping": {
            "image": "<img>",
            "audio": "<audio>"
        },
        "modality_reader_settings_mapping": {
                "image": {
                    "reader_type": "pickle",
                    "reader_path": null
                },
                "audio": null
            },
        "n_modality_embeddings": 256,
        "start_modality_token": "<MS>",
        "end_modality_token": "</MS>",
        "dataset_type": "multimodal",
        "max_tokens_count": 2000,
        "only_answer_loss": true,
        "truncate_top": false
    },
    "model_settings": {
        "model_path": "/from_s3/model",
        "model_type": "causal",
        "transformers_settings": {
        },
        "embeddings_initialization_strategy": {
            "<RS>": "<s>",
            "</RS>": "</s>",
            "<bot>": "<unk>",
            "<user>": "<unk>",
            "<system>": "<unk>",
            "<MS>": "<s>",
            "</MS>": "</s>",
            "<img>": "<unk>",
            "<audio>": "<unk>"
        },
        "peft_settings": {
            "r": 16,
            "lora_alpha": 16,
            "lora_dropout": 0.05,
            "target_modules": [
                "q_proj",
                "v_proj",
                "k_proj",
                "o_proj"
            ],
            "task_type": "CAUSAL_LM",
            "modules_to_save": ["embed_tokens", "lm_head"],
            "name": "LORA"
        }
    },
    "tokenizer_settings": {
        "tokenizer_path": "/from_s3/model"
    },
    "special_tokens_settings": {
        "bos_token": "<s>",
        "eos_token": "</s>"
    },
    "trainer_settings": {
        "evaluation_strategy": "epoch",
        "save_strategy": "epoch",
        "per_device_train_batch_size": 2,
        "per_device_eval_batch_size": 2,
        "gradient_accumulation_steps": 16,
        "logging_steps": 1,
        "learning_rate": 1e-4,
        "num_train_epochs": 4,
        "lr_scheduler_type": "cosine",
        "warmup_ratio": 0.3,
        "fp16": false,
        "bf16": true,
        "optim": "adamw_torch",
        "save_total_limit": 5,
        "load_best_model_at_end": false,
        "deepspeed": "configs/exp/deepspeed/ds_config_stage_2.json"
    },
    "logging_settings": {
        "project_name": "alignment",
        "run_name": "multimodal",
        "entity": "turbo-alignment"
        },
    "log_path": "train_output",
    "modality_encoder_settings_mapping": {
        "image": {
            "modality_encoder_type": "clip",
            "is_pickle": true,
            "encoder_path": "openai/clip-vit-large-patch14"
        },
        "audio": null
    },
    "modality_projector_mapping": {
        "image": "c_abstractor",
        "audio": null
    },
    "modality_projector_initialization_mapping": {
        "image": "/from_s3/projectors/honeybee/c_abs.pt",
        "audio": null
    },
    "cherry_pick_settings": {
        "generator_transformers_settings": {
            "num_beams": 1,
            "max_new_tokens": 64,
            "repetition_penalty": 1.0
        },
        "custom_generation_settings": {
            "generation_eos_token": "</RS>",
            "skip_special_tokens": false
        },
        "dataset_settings": {
            "sources": [
                {
                    "name": "rullava",
                    "records_path": "/app/data/multimodal/rullava/val_chat.jsonl",
                    "num_samples": 25
                }
            ],
            "prompt_template": {
                "role_tag_mapping": {
                    "bot": "<bot>",
                    "user": "<user>",
                    "system": "<system>"
                },
                "prefix_template": "<RS>{role}",
                "suffix_template": "</RS>"
            },
            "dataset_type": "multimodal",
            "max_tokens_count": 2000,
            "n_modality_embeddings": 256,
            "start_modality_token": "<MS>",
            "end_modality_token": "</MS>",
            "only_answer_loss": true,
            "random_cut": true,
            "modality_token_mapping": {
                "image": "<img>",
                "audio": "<audio>"
            },
            "modality_reader_settings_mapping": {
                "image": {
                    "reader_type": "pickle",
                    "reader_path": null
                },
                "audio": null
        },
            "truncate_top": false
        },
        "metric_settings": [
            {
                "type": "meteor",
                "parameters": {"need_average": [true, false]}
            }]
    }
}


